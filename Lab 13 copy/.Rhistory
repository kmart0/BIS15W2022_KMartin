gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, fill=country))+
geom_line(color="darkgreen")+
facet_wrap(country~.)+
theme_calc()
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, fill=country))+
geom_line(color="darkgreen", size=1.25)+
facet_wrap(country~.)+
theme_calc()
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, color=country))+
geom_line(color="darkgreen", size=1.25)+
facet_wrap(country~.)+
theme_calc()
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, color=country))+
geom_line(color=size=1.25)+
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, color=country))+
geom_line(size=1.25)+
facet_wrap(country~.)+
theme_calc()
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
theme_calc()
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
theme_calc()+
labs(title= "Countries with 2020's Lowest and Highest Life Expectancy",
x="Year",
y="Life Expectancy (Years)")
#Now I want to look at income:
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=gdpper, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)
#Now I want to look at income:
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=gdpper, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()
#Now I want to look at income:
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=gdpper, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()+
theme_calc()+
labs(title= "Countries with 2020's Lowest and Highest Life Expectancy",
x="Year",
y="Life Expectancy (Years)")
#Now I want to look at income:
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=gdpper, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()+
theme_calc()+
labs(title= "Countries with 2020's Lowest and Highest Life Expectancy",
x="Year",
y="GDP per Capita (adjusted)")
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similat to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similar to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
gap_lifemoney %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=life_money, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similar to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
gap_lifemoney %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=life_money, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similar to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
gap_lifemoney %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=life_money, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()+
labs(title= "Changing Ratio of GDP and Life Expectancy",
x="Year",
y="(GDP per Capita/Life Expectancy")
kuwait_pop %>%
ggplot(aes(x=numeric_year, y=lifeexp))+
geom_line(size=1.5, color="darkgreen")+
theme_calcc()+
labs(title="Population Changes from 1920-2020 in Kuwait",
x="Year",
y="Life Expectancy (years)")
kuwait_pop %>%
ggplot(aes(x=numeric_year, y=lifeexp))+
geom_line(size=1.5, color="darkgreen")+
theme_calc()+
labs(title="Population Changes from 1920-2020 in Kuwait",
x="Year",
y="Life Expectancy (years)")
#now its time to plot
long_poptotal %>%
filter(country=="India"|country=="China"|country=="Indonesia"|country=="United States"|country=="Pakistan") %>%
ggplot(aes(x=numeric_year, color=country, y=pop, fill=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
labs(title="Growth of Population in Top Five Countries from 1920-2020",
x="Year",
y="Population")+
theme_calc()
#now to refine the data to top 5 countries and PLOT
long_income_per_adjusted %>%
filter(country=="Qatar"|country=="Luxembourg"|country=="Singapore"|country=="Brunei"|country=="Ireland") %>%
ggplot(aes(x=numeric_year, color=country, y=gdpper, fill=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
labs(title= "GDP per Capita from 1920-2020 for Top 5 Wealthy Countries",
x="Year",
y="GDP per capita (adjusted)")+
theme_calc()
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similar to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
gap_lifemoney %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=life_money, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()+
theme_calc()+
labs(title= "Changing Ratio of GDP and Life Expectancy",
x="Year",
y="(GDP per Capita/Life Expectancy")
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similar to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
gap_lifemoney %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=life_money, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
theme_calc()+
labs(title= "Changing Ratio of GDP and Life Expectancy",
x="Year",
y="(GDP per Capita/Life Expectancy")
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similar to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
gap_lifemoney %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=life_money, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()+
theme_calc()+
labs(title= "Changing Ratio of GDP and Life Expectancy",
x="Year",
y="(GDP per Capita/Life Expectancy")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(ggthemes)
library(RColorBrewer)
library(paletteer)
options(scipen=999) #cancels the use of scientific notation for the session
#countries represented in population total data:
n_distinct(long_poptotal$country)
count(country)
#countries represented in population total data:
n_distinct(long_poptotal$country)
count(long_poptotal$country)
#countries represented in population total data:
n_distinct(long_poptotal$country)
summarise(long_poptotal$country)
#countries represented in population total data:
n_distinct(long_poptotal$country)
long_poptotal %>%
group_by(country) %>%
summarize(country)
#countries represented in population total data:
n_distinct(long_poptotal$country)
long_poptotal %>%
group_by(country) %>%
summarize(country=n_distinct(country))
#countries represented in population total data:
n_distinct(long_poptotal$country)
poptotal %>%
summarize(country)
#in the gdp per capita data:
n_distinct(long_income_per_adjusted$country)
income_per_adjusted %>%
summarize(country)
#and in the life expectancy data:
n_distinct(long_life_exp$country)
summarize(country)
#and in the life expectancy data:
n_distinct(long_life_exp$country)
life_exp %>%
summarize(country)
#Using my wide data to find the change in population between 1920 and 2020
poptotal %>%
mutate(pop_change=`2020`-`1920`) %>%
arrange(desc(pop_change)) %>%
summarize(country, pop_change) %>%
head(n=5)
summary(life_exp)#also untidy
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
install.packages("remotes")
library(albersusa)
us_comp <- usa_sf() # get a composite map of the USA
cnty_comp <- counties_sf() # get a composite map of USA counties
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
ca_comp <- us_comp %>%
filter(name=="California")
ca_cnty_comp <- cnty_comp %>%
filter(state=="California")
#install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
spiders <- read_csv(here("Lab 12 copy", "data", "spiders_with_locs.csv")) %>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "toner-lite", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude), color="darkgreen", size=.75) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
library(albersusa)
us_comp <- usa_sf() # get a composite map of the USA
cnty_comp <- counties_sf() # get a composite map of USA counties
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
ca_comp <- us_comp %>%
filter(name=="California")
ca_cnty_comp <- cnty_comp %>%
filter(state=="California")
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude), size=0.8)+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
uso_map
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude), color=locality)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude), color=Locality)
View(spiders)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude), color=County)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude, color=County))
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude), color="darkgreen")
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude), color="darkgreen")+
theme_classic()
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude, color="darkgreen"))+
theme_classic()
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude, color=county))+
theme_classic()
knitr::opts_chunk$set(echo = TRUE)
microreact<- read_csv("Data/microreact_isolates.csv")
View(microreact)
microreact %>%
count(country, year)
microreact<- read_csv("Data/microreact_isolates.csv")
microreact <- janitor::clean_names(microreact)
View(microreact)
microreact %>%
count(country, year)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(ggmap)
library(albersusa)
grizzly <- readr::read_csv("data/bear-sightings.csv")
summary(grizzly)
lat <- c(55.02, 70.37)
long <- c(-166.2, -131.3)
bbox <- make_bbox(long, lat, f = 0.05)
bear_map <- get_map(bbox, maptype = "terrain-lines", source = "stamen")
ggmap(bar_map)
ggmap(bear_map)
bear_map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(bear_map)
bear_map <- get_map(bbox, maptype = "toner-hybrid", source = "stamen")
ggmap(bear_map)
bear_map <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(bear_map)
ggmap(bear_map)+
geom_point(data = grizzly, aes(longitude, latitude), color="black", size=.75) +
labs(x = "Longitude", y = "Latitude", title = "Grizzly Sighting Locations")
wolf <- readr::read_csv("data/wolves_data/wolves_dataset.csv")
summary(wolf)
View(wolf)
#distinct wolf populations:
n_distinct(wolf$pop)
#filtering for latitude, less than 49 is in the lower 48
lower48_wolf <- wolf %>%
filter(lat<=49)
View(lower48_wolf)
summary(lower48_wolf)
lat <- c(33.89, 47.75)
long <- c(-110.99, -86.82)
wolf_bbox <- make_bbox(lat, long, f=0.05)
lat <- c(55.02, 70.37)
long <- c(-166.2, -131.3)
bear_bbox <- make_bbox(long, lat, f = 0.05)
bear_map <- get_map(bear_bbox, maptype = "terrain", source = "stamen")
ggmap(bear_map)
lower48_wolfmap <- get_map(wolf_bbox, maptype = "terrain-lines", source = "stamen")
lat <- c(33.89, 47.75)
long <- c(-110.99, -86.82)
wolf_bbox <- make_bbox(lat, long, f=0.05)
lower48_wolfmap <- get_map(wolf_bbox, maptype = "terrain-lines", source = "stamen")
ggmap(lower48_wolfmap)
wolf_bbox <- make_bbox(long, lat, f=0.05)
lower48_wolfmap <- get_map(wolf_bbox, maptype = "terrain-lines", source = "stamen")
ggmap(lower48_wolfmap)
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(longitude, latitude), color="black", size=.75) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(long, lat), color="black", size=.75) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(long, lat), color="black", size=1) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(long, lat), color="black", size=2) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(long, lat, color=pop), color="black", size=2) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(long, lat, fill=pop), color="black", size=2) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(long, lat, color=pop), color="black", size=2) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(long, lat, fill=pop, color=pop), color="black", size=2) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(long, lat, color=pop), size=2) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")
colors <- paletteer::palettes_d_names
View(colors)
my_palette <- paletteer_d("calecopal::superbloom3")
library(paletteer)
my_palette <- paletteer_d("calecopal::superbloom3")
barplot(rep(1,14), axes=FALSE, col=my_palette)
my_palette <- paletteer_d("calecopal::bigsur")
barplot(rep(1,14), axes=FALSE, col=my_palette)
my_palette <- paletteer_d("calecopal::bigsur2")
barplot(rep(1,14), axes=FALSE, col=my_palette)
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(long, lat, color=pop), size=2) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")+
scale_color_manual(values=my_palette)
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(long, lat, color=pop), size=2) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")+
scale_color_manual(values=my_palette)+
theme_classic()
my_palette <- paletteer_d("calecopal::superbloom3")
barplot(rep(1,14), axes=FALSE, col=my_palette)
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(long, lat, color=pop), size=2) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")+
scale_color_manual(values=my_palette)+
theme_classic()
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(long, lat, color=pop), size=2.5) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")+
scale_color_manual(values=my_palette)+
theme_classic()
ggmap(lower48_wolfmap)+
geom_point(data = lower48_wolf, aes(long, lat, color=pop), size=2.5) +
labs(x = "Longitude", y = "Latitude", title = "Wolf Pathogen Exposure Locations")+
scale_color_manual(values=my_palette)+
theme_classic()
#when I have more time I want to make the title bold and larger
install.packages(c("cli", "clipr", "colorspace", "dplyr", "evaluate", "glue", "jsonlite", "readr", "rlang", "tidyr", "tidyselect", "TSP", "yaml"))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
#install.packages("shiny")
library(shiny)
install.packages("shiny")
library(shiny)
library(devtools)
install_github("andreacirilloac/updateR")
library(updateR)
install.packages("shiny")
library(shiny)
library(devtools)
install_github("andreacirilloac/updateR")
