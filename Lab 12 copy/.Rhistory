geom_line()
#now its time to plot
long_poptotal %>%
filter(country=="India"|country=="China"|country=="Indonesia"|country=="United States"|country=="Pakistan") %>%
ggplot(aes(x=numeric_year, color=country, y=pop, fill=country))+
geom_line()+
scale_color_manual(values=my_palette)
#now its time to plot
long_poptotal %>%
filter(country=="India"|country=="China"|country=="Indonesia"|country=="United States"|country=="Pakistan") %>%
ggplot(aes(x=numeric_year, color=country, y=pop, fill=country))+
geom_line(size=1.5)+
scale_color_manual(values=my_palette)
View(income_per_adjusted)
knitr::opts_chunk$set(echo = TRUE)
#now its time to plot
long_poptotal %>%
filter(country=="India"|country=="China"|country=="Indonesia"|country=="United States"|country=="Pakistan") %>%
ggplot(aes(x=numeric_year, color=country, y=pop, fill=country))+
geom_line(size=1.5)+
scale_color_manual(values=my_palette)+
labs(title="Growth of Population in Top Five Countries from 1920-2020",
x="Year",
y="Population")
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(ggthemes)
library(RColorBrewer)
library(paletteer)
options(scipen=999) #cancels the use of scientific notation for the session
#now its time to plot
long_poptotal %>%
filter(country=="India"|country=="China"|country=="Indonesia"|country=="United States"|country=="Pakistan") %>%
ggplot(aes(x=numeric_year, color=country, y=pop, fill=country))+
geom_line(size=1.5)+
scale_color_manual(values=my_palette)+
labs(title="Growth of Population in Top Five Countries from 1920-2020",
x="Year",
y="Population")
#using the wide form of data to find the growth in gdp
#first filter for 1920-2020
income_per_adjusted <- income_per_adjusted %>%
filter(year=`1920`:`2020`)
#using the wide form of data to find the growth in gdp
income_per_adjusted <- income_per_adjusted %>%
mutate(change_gdp_100=`2020`-`1920`)
income_per_adjusted %>% summarize(country, change_gdp_100)
9. (3 points) Create three new objects that restrict each data set (life expectancy, population, income) to the years 1920-2020. Hint: I suggest doing this with the long form of your data. Once this is done, merge all three data sets using the code I provide below. You may need to adjust the code depending on how you have named your objects. I called mine `life_expectancy_100`, `population_100`, and `income_100`. For some of you, learning these `joins` will be important for your project.
```{r}
#using the wide form of data to find the growth in gdp
income_per_adjusted <- income_per_adjusted %>%
mutate(change_gdp_100=`2020`-`1920`)
income_per_adjusted %>%
summarize(country, change_gdp_100) %>%
arrange(desc(change_gdp_100))
#using the wide form of data to find the growth in GDP
income_per_adjusted <- income_per_adjusted %>%
mutate(change_gdp_100=`2020`-`1920`)
income_per_adjusted %>%
summarize(country, change_gdp_100) %>%
arrange(desc(change_gdp_100)) %>%
head(n=5)
#now using the long form
#First changing the years to numerics, and restricting to 1920-2020
long_income_per_adjusted <- income_per_adjusted %>%
mutate(numeric_year=as.numeric(income_per_adjusted$year)) %>%
filter(numeric_year>=1920, numeric_year<=2020)
#now using the long form
#First changing the years to numerics, and restricting to 1920-2020
long_income_per_adjusted <- long_income_per_adjusted %>%
mutate(numeric_year=as.numeric(income_per_adjusted$year)) %>%
filter(numeric_year>=1920, numeric_year<=2020)
#now using the long form
#First changing the years to numerics, and restricting to 1920-2020
long_income_per_adjusted <- long_income_per_adjusted %>%
mutate(numeric_year=as.numeric(long_income_per_adjusted$year)) %>%
filter(numeric_year>=1920, numeric_year<=2020)
View(long_income_per_adjusted)
#now to refine the data to top 5 countries and PLOT
long_income_per_adjusted %>%
filter(country=="Qatar"|country=="Luxembourg"|country=="Singapore"|country=="Brunei"|country=="Ireland") %>%
ggplot(aes(x=numeric_year, color=country, y=gdpper, fill=country))+
geom_line(size=1.5)+
scale_color_manual(values=my_palette)
#now to refine the data to top 5 countries and PLOT
long_income_per_adjusted %>%
filter(country=="Qatar"|country=="Luxembourg"|country=="Singapore"|country=="Brunei"|country=="Ireland") %>%
ggplot(aes(x=numeric_year, color=country, y=gdpper, fill=country))+
geom_line(size=1)+
scale_color_manual(values=my_palette)+
labs(title=)
#now to refine the data to top 5 countries and PLOT
long_income_per_adjusted %>%
filter(country=="Qatar"|country=="Luxembourg"|country=="Singapore"|country=="Brunei"|country=="Ireland") %>%
ggplot(aes(x=numeric_year, color=country, y=gdpper, fill=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
labs(title=)
#now its time to plot
long_poptotal %>%
filter(country=="India"|country=="China"|country=="Indonesia"|country=="United States"|country=="Pakistan") %>%
ggplot(aes(x=numeric_year, color=country, y=pop, fill=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
labs(title="Growth of Population in Top Five Countries from 1920-2020",
x="Year",
y="Population")
#now to refine the data to top 5 countries and PLOT
long_income_per_adjusted %>%
filter(country=="Qatar"|country=="Luxembourg"|country=="Singapore"|country=="Brunei"|country=="Ireland") %>%
ggplot(aes(x=numeric_year, color=country, y=gdpper, fill=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
labs(title= "GDP per Capita from 1920-2020 for Top 5 Wealthy Countries",
x="Year",
y="GDP per capita (adjusted)")
#now to refine the data to top 5 countries and PLOT
long_income_per_adjusted %>%
filter(country=="Qatar"|country=="Luxembourg"|country=="Singapore"|country=="Brunei"|country=="Ireland") %>%
ggplot(aes(x=numeric_year, color=country, y=gdpper, fill=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
labs(title= "GDP per Capita from 1920-2020 for Top 5 Wealthy Countries",
x="Year",
y="GDP per capita (adjusted)")+
theme_classic()
#now its time to plot
long_poptotal %>%
filter(country=="India"|country=="China"|country=="Indonesia"|country=="United States"|country=="Pakistan") %>%
ggplot(aes(x=numeric_year, color=country, y=pop, fill=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
labs(title="Growth of Population in Top Five Countries from 1920-2020",
x="Year",
y="Population")+
theme_classic()
gapminder_join <- inner_join(long_life_exp, long_poptotal, by= c("country", "year"))
gapminder_join <- inner_join(gapminder_join, long_income_per_adjusted, by= c("country", "year"))
gapminder_join
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(ggthemes)
library(RColorBrewer)
library(paletteer)
options(scipen=999) #cancels the use of scientific notation for the session
#first step is finding the countries with the highest and lowest life expectancy in 2020
gapminder_join %>%
filter(year=="2020") %>%
arrange(desc(lifeexp)) %>%
head(n=5)
#first step is finding the countries with the highest and lowest life expectancy in 2020
gapminder_join %>%
filter(year=="2020") %>%
arrange(desc(lifeexp)) %>%
head(n=1)
View(gapminder_join)
#now the lowest:
gapminder_join %>%
filter(year=="2020") %>%
arrange(lifeexp) %>%
head(n=1)
#now the lowest:
gapminder_join %>%
filter(year=="2020") %>%
arrange(lifeexp) %>%
head(n=5)
View(gapminder_join)
#now the lowest:
gapminder_join %>%
filter(year=="2020") %>%
arrange(lifeexp) %>%
head(n=1)
?facet_grid
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, fill=country))+
geom_line()+
facet_wrap(country~.)
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, fill=country))+
geom_line()+
facet_wrap(country~.)
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, fill=country))+
geom_line()+
facet_wrap(country~.)+
theme_classic()
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, fill=country))+
geom_line()+
facet_wrap(country~.)+
theme_calc()
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, fill=country))+
geom_line(color="darkgreen")+
facet_wrap(country~.)+
theme_calc()
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, fill=country))+
geom_line(color="darkgreen", size=1.25)+
facet_wrap(country~.)+
theme_calc()
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, color=country))+
geom_line(color="darkgreen", size=1.25)+
facet_wrap(country~.)+
theme_calc()
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, color=country))+
geom_line(color=size=1.25)+
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, color=country))+
geom_line(size=1.25)+
facet_wrap(country~.)+
theme_calc()
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
theme_calc()
#now I want to create side by side graphs of life expectancy
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=lifeexp, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
theme_calc()+
labs(title= "Countries with 2020's Lowest and Highest Life Expectancy",
x="Year",
y="Life Expectancy (Years)")
#Now I want to look at income:
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=gdpper, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)
#Now I want to look at income:
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=gdpper, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()
#Now I want to look at income:
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=gdpper, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()+
theme_calc()+
labs(title= "Countries with 2020's Lowest and Highest Life Expectancy",
x="Year",
y="Life Expectancy (Years)")
#Now I want to look at income:
gapminder_join %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=gdpper, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()+
theme_calc()+
labs(title= "Countries with 2020's Lowest and Highest Life Expectancy",
x="Year",
y="GDP per Capita (adjusted)")
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similat to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similar to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
gap_lifemoney %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=life_money, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similar to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
gap_lifemoney %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=life_money, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similar to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
gap_lifemoney %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=life_money, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()+
labs(title= "Changing Ratio of GDP and Life Expectancy",
x="Year",
y="(GDP per Capita/Life Expectancy")
kuwait_pop %>%
ggplot(aes(x=numeric_year, y=lifeexp))+
geom_line(size=1.5, color="darkgreen")+
theme_calcc()+
labs(title="Population Changes from 1920-2020 in Kuwait",
x="Year",
y="Life Expectancy (years)")
kuwait_pop %>%
ggplot(aes(x=numeric_year, y=lifeexp))+
geom_line(size=1.5, color="darkgreen")+
theme_calc()+
labs(title="Population Changes from 1920-2020 in Kuwait",
x="Year",
y="Life Expectancy (years)")
#now its time to plot
long_poptotal %>%
filter(country=="India"|country=="China"|country=="Indonesia"|country=="United States"|country=="Pakistan") %>%
ggplot(aes(x=numeric_year, color=country, y=pop, fill=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
labs(title="Growth of Population in Top Five Countries from 1920-2020",
x="Year",
y="Population")+
theme_calc()
#now to refine the data to top 5 countries and PLOT
long_income_per_adjusted %>%
filter(country=="Qatar"|country=="Luxembourg"|country=="Singapore"|country=="Brunei"|country=="Ireland") %>%
ggplot(aes(x=numeric_year, color=country, y=gdpper, fill=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
labs(title= "GDP per Capita from 1920-2020 for Top 5 Wealthy Countries",
x="Year",
y="GDP per capita (adjusted)")+
theme_calc()
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similar to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
gap_lifemoney %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=life_money, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()+
theme_calc()+
labs(title= "Changing Ratio of GDP and Life Expectancy",
x="Year",
y="(GDP per Capita/Life Expectancy")
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similar to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
gap_lifemoney %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=life_money, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
theme_calc()+
labs(title= "Changing Ratio of GDP and Life Expectancy",
x="Year",
y="(GDP per Capita/Life Expectancy")
#To see the relationship, I am going to mutate column to show a ratio (GDP per capita/life expectancy)
#This should show us something similar to how much money it costs to add a year of life over
gap_lifemoney <- gapminder_join %>%
mutate(life_money=gdpper/lifeexp)
gap_lifemoney %>%
filter(country=="Central African Republic"| country== "Singapore") %>%
ggplot(aes(x=numeric_year.x, y=life_money, color=country))+
geom_line(size=1.25)+
scale_color_manual(values=my_palette)+
facet_wrap(country~.)+
scale_y_log10()+
theme_calc()+
labs(title= "Changing Ratio of GDP and Life Expectancy",
x="Year",
y="(GDP per Capita/Life Expectancy")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(ggthemes)
library(RColorBrewer)
library(paletteer)
options(scipen=999) #cancels the use of scientific notation for the session
#countries represented in population total data:
n_distinct(long_poptotal$country)
count(country)
#countries represented in population total data:
n_distinct(long_poptotal$country)
count(long_poptotal$country)
#countries represented in population total data:
n_distinct(long_poptotal$country)
summarise(long_poptotal$country)
#countries represented in population total data:
n_distinct(long_poptotal$country)
long_poptotal %>%
group_by(country) %>%
summarize(country)
#countries represented in population total data:
n_distinct(long_poptotal$country)
long_poptotal %>%
group_by(country) %>%
summarize(country=n_distinct(country))
#countries represented in population total data:
n_distinct(long_poptotal$country)
poptotal %>%
summarize(country)
#in the gdp per capita data:
n_distinct(long_income_per_adjusted$country)
income_per_adjusted %>%
summarize(country)
#and in the life expectancy data:
n_distinct(long_life_exp$country)
summarize(country)
#and in the life expectancy data:
n_distinct(long_life_exp$country)
life_exp %>%
summarize(country)
#Using my wide data to find the change in population between 1920 and 2020
poptotal %>%
mutate(pop_change=`2020`-`1920`) %>%
arrange(desc(pop_change)) %>%
summarize(country, pop_change) %>%
head(n=5)
summary(life_exp)#also untidy
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
spiders <- read_csv(here("Lab 12 copy", "data", "spiders_with_locs.csv")) %>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
map1 <- get_map(bbox, maptype = "watercolor", source = "stamen")
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
map1 <- get_map(bbox, maptype = "watercolor", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
map1 <- get_map(bbox, maptype = "terrain-lines", source = "stamen")
ggmap(map1)
map1 <- get_map(bbox, maptype = "toner-2011", source = "stamen")
ggmap(map1)
map1 <- get_map(bbox, maptype = "toner-lines", source = "stamen")
ggmap(map1)
map1 <- get_map(bbox, maptype = "toner", source = "stamen")
ggmap(map1)
map1 <- get_map(bbox, maptype = "toner-lite", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude), color="blue") +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude), color="darkgreen") +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude), color="darkgreen", sixe=.75) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude), color="darkgreen", size=.75) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
library(albersusa)
install.packages("remotes")
remotes::install_github("hrbrmstr/albersusa")
library(albersusa)
