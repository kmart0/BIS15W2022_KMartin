pi*2
my_vector <- c(10, 20, 30)
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
days_of_the_week <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")
my_vector_sequence <- c(1:100)
my_vector_sequence
days_of_the_week[3]
which[my_vector_sequence==15]
which[my_vector_sequence]==15
my_vector_sequence < 10
my_vector_sequence[my_vector_sequence <= 10]
my_vector_sequence < 10
my_vector_sequence <== [10]
my_vector_sequence < 10
my_vector_sequence <= [10]
my_vector_sequence==15
my_vector_sequence < 10
my_vector_sequence <= 10
my_vector_sequence[my_vector_sequence <= 10]
Philosophers_Stone <- c(317.5, 657.1)
Chamber_of_Secrets <- c(261.9, 616.9)
Prisoner_of_Azkaban <- c(249.5, 547.1)
Goblet_of_Fire <- c(290.0, 606.8)
Order_of_the_Phoenix <- c(292.0, 647.8)
Half_Blood_Prince <- c(301.9, 632.4)
Deathly_Hallows_1 <- c(295.9, 664.3)
Deathly_Hallows_2 <- c(381.0, 960.5)
box_office <- c(Philosophers_Stone, Chamber_of_Secrets, Prisoner_of_Azkaban, Goblet_of_Fire, Order_of_the_Phoenix, Half_Blood_Prince, Deathly_Hallows_1, Deathly_Hallows_2)
box_office
colnames(harry_potter_matrix) <- region
region <- c("US", "non-US")
region
harry_potter_matrix <- matrix(box_office, nrow = 8, byrow = T)
harry_potter_matrix
region <- c("US", "non-US")
region
titles <- c("Philosophers_Stone", "Chamber_of_Secrets", "Prisoner_of_Azkaban", "Goblet_of_Fire", "Order_of_the_Phoenix", "Half_Blood_Prince", "Deathly_Hallows_1", "Deathly_Hallows_2")
titles
colnames(harry_potter_matrix) <- region
harry_potter_matrix
titles <- c("Philosophers_Stone", "Chamber_of_Secrets", "Prisoner_of_Azkaban", "Goblet_of_Fire", "Order_of_the_Phoenix", "Half_Blood_Prince", "Deathly_Hallows_1", "Deathly_Hallows_2")
titles
colnames(harry_potter_matrix) <- region
rownames(harry_potter_matrix) <- titles
harry_potter_matrix
global <- rowSums(harry_potter_matrix)
global
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix
total_earnings <- colSums(all_harry_potter_matrix)
?matrix()
total_earnings <- colSums(all_harry_potter_matrix)
all_harry_potter_matrix(rbind(all_harry_potter_matrix, total_earnings))
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix
all_harry_potter_matrix <-rbind(all_harry_potter_matrix, total_earnings)
all_harry_potter_matrix <-rbind(all_harry_potter_matrix, total_earnings)
all_harry_potter_matrix
all_harry_potter_matrix <-rbind(all_harry_potter_matrix, total_earnings)
all_harry_potter_matrix
all_harry_potter_matrix <- cbind(harry_potter_matrix, global)
all_harry_potter_matrix
total_earnings <- colSums(all_harry_potter_matrix)
all_harry_potter_matrix <-rbind(all_harry_potter_matrix, total_earnings)
all_harry_potter_matrix
harry_potter_matrix[2,1]
harry_potter_matrix[1:4]
non_us_earnings <- all_harry_potter_matrix[ ,2]
mean(non_us_earnings)
spring_1 <- c(36.25, 35.40, 35.30)
spring_2 <- c(35.15, 35.35, 33.35)
spring_3 <- c(30.70, 29.65, 29.20)
spring_4 <- c(39.70, 40.05, 38.65)
spring_5 <- c(31.85, 31.40, 29.30)
spring_6 <- c(30.20, 30.65, 29.75)
spring_7 <- c(32.90, 32.50, 32.80)
spring_8 <- c(36.80, 36.45, 33.15)
?matrix
#need to make a new object that puts all the hot springs into its own vector
hot_spring_data <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
#need to make a new object that puts all the hot springs into its own vector
hot_spring_data <- c(spring_1, spring_2, spring_3, spring_4, spring_5, spring_6, spring_7, spring_8)
hot_spring_data
matrix(hot_spring_data, nrow=8, byrow=T)
hot_spring_data_table <- matrix(hot_spring_data, nrow=8, byrow=T)
hot_spring_data_table <- matrix(hot_spring_data, nrow=8, byrow=T)
hot_spring_data_table
hot_spring_names <- c("Bluebell Spring","Opal Spring","Riverside Spring","Too Hot Spring","Mystery Spring", "Emerald Spring","Black Spring")
temps_of_springs <- c("Temp 1", "Temp 2", "Temp 3")
?colnames()
#Adding my names to the matrix
colnames(hot_spring_data_table) <- temps_of_springs
rownames(hot_spring_data_table) <- hot_spring_names
#making my vectors for the row and column titles
hot_spring_names <- c("Bluebell Spring","Opal Spring","Riverside Spring","Too Hot Spring","Mystery Spring", "Emerald Spring","Black Spring","Pearl Spring")
temps_of_springs <- c("Temp 1", "Temp 2", "Temp 3")
#Adding my names to the matrix
colnames(hot_spring_data_table) <- temps_of_springs
rownames(hot_spring_data_table) <- hot_spring_names
hot_spring_data_table
?rowMeans
#make a new vector that calculates the means of the rows
Average_Temp <- rowMeans(hot_spring_data_table)
#make a new vector that calculates the means of the rows
Average_Temp <- rowMeans(hot_spring_data_table)
Average_Temp
?cbind
#Add the new vector to the matrix
cbind(hot_spring_data_table,Average_Temp)
hot_spring_data_table
#make a new vector that calculates the means of the rows
Average_Temp <- rowMeans(hot_spring_data_table)
Average_Temp
#Add the new vector to the matrix
cbind(hot_spring_data_table,Average_Temp)
hot_spring_data_table
#Add the new vector to the matrix
cbind(hot_spring_data_table,Average_Temp)
hot_spring_data_table
#Add the new vector to the matrix
cbind(hot_spring_data_table,Average_Temp)
hot_spring_data_table
hot_spring_data_table
Average_Temp
#Add the new vector to the matrix, make new table
complete_spring_temp_table <- cbind(hot_spring_data_table,Average_Temp)
#Add the new vector to the matrix, make new table
complete_spring_temp_table <- cbind(hot_spring_data_table,Average_Temp)
complete_spring_temp_table
complete_spring_temp_table[2,4]
#making my vectors for the row and column titles
hot_spring_names <- c("Bluebell Spring","Opal Spring","Riverside Spring","Too Hot Spring","Mystery Spring", "Emerald Spring","Black Spring","Pearl Spring")
temps_of_springs <- c("Jill", "Steve", "Susan")
#Adding my names to the matrix
colnames(hot_spring_data_table) <- temps_of_springs
rownames(hot_spring_data_table) <- hot_spring_names
hot_spring_data_table
#make a new vector that calculates the means of the rows
Average_Temp <- rowMeans(hot_spring_data_table)
Average_Temp
#Add the new vector to the matrix, make new table
complete_spring_temp_table <- cbind(hot_spring_data_table,Average_Temp)
complete_spring_temp_table
complete_spring_temp_table[2,4]
?colMeans
#Make Jill's column its own matrix
Jills_Measurements <- complete_spring_temp_table[,1]
Jills_Measurements
#Make Jill's column its own matrix
Jills_Measurements <- complete_spring_temp_table[,1]
Jills_measurements_table <- matrix(Jills_Measurements, nrow=8, byrow=T)
#Make Jill's column its own matrix
Jills_Measurements <- complete_spring_temp_table[,1]
Jills_measurements_table <- matrix(Jills_Measurements, nrow=8, byrow=T)
Jills_measurements_table
#Make Jill's column its own matrix
Jills_Measurements <- complete_spring_temp_table[,1]
Jills_measurements_table <- matrix(Jills_Measurements, nrow=8, byrow=T)
#sum the column and extract the value
Jills_measurements_mean <- colSums(Jills_measurements_table)
Jills_measurements_mean
#Make Jill's column its own matrix
Jills_Measurements <- complete_spring_temp_table[,1]
Jills_measurements_table <- matrix(Jills_Measurements, nrow=8, byrow=T)
#sum the column and extract the value
Jills_measurements_mean <- colMeans(Jills_measurements_table)
Jills_measurements_mean
rowsum?
?rowsum
?rowsum
Standard_deviations_by_scientist <- sd(hot_spring_data_table)
Standard_deviations_by_scientist
sd(complete_spring_temp_table)
sd(hot_spring_data_table)
sd(hot_spring_data_table[1])
sd(hot_spring_data_table[1,])
sd(hot_spring_data_table[1, 1:3])
#I'm interested in standard deviations of measurements by the different scientists
#There's probably a much easier way to do this but since I don't know the function I am just going to find the sd of each row and make that a new vector to add to my table
Sd_Bluebell <- sd(hot_spring_data_table[1,])
Sd_Bluebell
#I'm interested in standard deviations of measurements by the different scientists
#There's probably a much easier way to do this but since I don't know the function I am just going to find the sd of each row and make that a new vector to add to my table
Sd_Bluebell <- sd(hot_spring_data_table[1,])
Sd_Bluebell
#I'm going to check to make sure this is the value I want
values <- c(36.25,36.4,35.3)
sd(values)
#I'm interested in standard deviations of measurements by the different scientists
#There's probably a much easier way to do this but since I don't know the function I am just going to find the sd of each row and make that a new vector to add to my table
Sd_Bluebell <- sd(hot_spring_data_table[1,])
Sd_Bluebell
#I'm going to check to make sure this is the value I want
values <- c(36.25,35.4,35.3)
sd(values)
#ok it worked! I will do the rest of them now
sd_Opal <- sd(hot_spring_data_table[2,])
sd_Riverside <- sd(hot_spring_data_table[3,])
sd_TooHot <- sd(hot_spring_data_table[4,])
sd_Mystery <- sd(hot_spring_data_table[5,])
sd_Emerald <- sd(hot_spring_data_table[6,])
sd_Black <- sd(hot_spring_data_table[7,])
sd_Pearl <- sd(hot_spring_data_table[8,])
#ok it worked! I will do the rest of them now
sd_Opal <- sd(hot_spring_data_table[2,])
sd_Riverside <- sd(hot_spring_data_table[3,])
sd_TooHot <- sd(hot_spring_data_table[4,])
sd_Mystery <- sd(hot_spring_data_table[5,])
sd_Emerald <- sd(hot_spring_data_table[6,])
sd_Black <- sd(hot_spring_data_table[7,])
sd_Pearl <- sd(hot_spring_data_table[8,])
#Now I will make a vector out of them
sd_springtemp_by_scientist <- c(sd_Opal,sd_Riverside,sd_TooHot,sd_Mystery,sd_Emerald,sd_Black,sd_Pearl)
#and then add the vector as a column
xtra_complete_spring_temp_table <- cbind(complete_spring_temp_table,sd_springtemp_by_scientist)
xtra_complete_spring_temp_table
#ok it worked! I will do the rest of them now
sd_Opal <- sd(hot_spring_data_table[2,])
sd_Riverside <- sd(hot_spring_data_table[3,])
sd_TooHot <- sd(hot_spring_data_table[4,])
sd_Mystery <- sd(hot_spring_data_table[5,])
sd_Emerald <- sd(hot_spring_data_table[6,])
sd_Black <- sd(hot_spring_data_table[7,])
sd_Pearl <- sd(hot_spring_data_table[8,])
#Now I will make a vector out of them
sd_springtemp_by_scientist <- c(sd_Opal,sd_Riverside,sd_TooHot,sd_Mystery,sd_Emerald,sd_Black,sd_Pearl)
#and then add the vector as a column
xtra_complete_spring_temp_table <- cbind(hot_spring_data_table,sd_springtemp_by_scientist)
xtra_complete_spring_temp_table
#ok it worked! I will do the rest of them now
sd_Opal <- sd(hot_spring_data_table[2,])
sd_Riverside <- sd(hot_spring_data_table[3,])
sd_TooHot <- sd(hot_spring_data_table[4,])
sd_Mystery <- sd(hot_spring_data_table[5,])
sd_Emerald <- sd(hot_spring_data_table[6,])
sd_Black <- sd(hot_spring_data_table[7,])
sd_Pearl <- sd(hot_spring_data_table[8,])
#Now I will make a vector out of them
sd_springtemp_by_scientist <- c(sd_Bluebell,sd_Opal,sd_Riverside,sd_TooHot,sd_Mystery,sd_Emerald,sd_Black,sd_Pearl)
#I'm interested in standard deviations of measurements by the different scientists for each spring
#There's probably a much easier way to do this but since I don't know the function I am just going to find the sd of each row and make that a new vector to add to my table
Sd_Bluebell <- sd(hot_spring_data_table[1,])
Sd_Bluebell
#I'm going to check to make sure this is the value I want
values <- c(36.25,35.4,35.3)
sd(values)
#ok it worked! I will do the rest of them now
sd_Opal <- sd(hot_spring_data_table[2,])
sd_Riverside <- sd(hot_spring_data_table[3,])
sd_TooHot <- sd(hot_spring_data_table[4,])
sd_Mystery <- sd(hot_spring_data_table[5,])
sd_Emerald <- sd(hot_spring_data_table[6,])
sd_Black <- sd(hot_spring_data_table[7,])
sd_Pearl <- sd(hot_spring_data_table[8,])
#Now I will make a vector out of them
sd_springtemp_by_scientist <- c(sd_Bluebell,sd_Opal,sd_Riverside,sd_TooHot,sd_Mystery,sd_Emerald,sd_Black,sd_Pearl)
#ok it worked! I will do the rest of them now
sd_Opal <- sd(hot_spring_data_table[2,])
sd_Riverside <- sd(hot_spring_data_table[3,])
sd_TooHot <- sd(hot_spring_data_table[4,])
sd_Mystery <- sd(hot_spring_data_table[5,])
sd_Emerald <- sd(hot_spring_data_table[6,])
sd_Black <- sd(hot_spring_data_table[7,])
sd_Pearl <- sd(hot_spring_data_table[8,])
#Now I will make a vector out of them
sd_springtemp_by_scientist <- c(Sd_Bluebell,sd_Opal,sd_Riverside,sd_TooHot,sd_Mystery,sd_Emerald,sd_Black,sd_Pearl)
#and then add the vector as a column
xtra_complete_spring_temp_table <- cbind(hot_spring_data_table,sd_springtemp_by_scientist)
xtra_complete_spring_temp_table
#ok it worked! I will do the rest of them now
sd_Opal <- sd(hot_spring_data_table[2,])
sd_Riverside <- sd(hot_spring_data_table[3,])
sd_TooHot <- sd(hot_spring_data_table[4,])
sd_Mystery <- sd(hot_spring_data_table[5,])
sd_Emerald <- sd(hot_spring_data_table[6,])
sd_Black <- sd(hot_spring_data_table[7,])
sd_Pearl <- sd(hot_spring_data_table[8,])
#Now I will make a vector out of them
sd_springtemp_by_scientist <- c(Sd_Bluebell,sd_Opal,sd_Riverside,sd_TooHot,sd_Mystery,sd_Emerald,sd_Black,sd_Pearl)
#and then add the vector as a column
xtra_complete_spring_temp_table <- cbind(complete_spring_temp_table,sd_springtemp_by_scientist)
xtra_complete_spring_temp_table
#ok it worked! I will do the rest of them now
sd_Opal <- sd(hot_spring_data_table[2,])
sd_Riverside <- sd(hot_spring_data_table[3,])
sd_TooHot <- sd(hot_spring_data_table[4,])
sd_Mystery <- sd(hot_spring_data_table[5,])
sd_Emerald <- sd(hot_spring_data_table[6,])
sd_Black <- sd(hot_spring_data_table[7,])
sd_Pearl <- sd(hot_spring_data_table[8,])
#Now I will make a vector out of them
sd_springtemp_by_scientist <- c(Sd_Bluebell,sd_Opal,sd_Riverside,sd_TooHot,sd_Mystery,sd_Emerald,sd_Black,sd_Pearl)
#and then add the vector as a column
xtra_complete_spring_temp_table <- cbind(hot_spring_data_table,sd_springtemp_by_scientist)
xtra_complete_spring_temp_table
#ok it worked! I will do the rest of them now
sd_Opal <- sd(hot_spring_data_table[2,])
sd_Riverside <- sd(hot_spring_data_table[3,])
sd_TooHot <- sd(hot_spring_data_table[4,])
sd_Mystery <- sd(hot_spring_data_table[5,])
sd_Emerald <- sd(hot_spring_data_table[6,])
sd_Black <- sd(hot_spring_data_table[7,])
sd_Pearl <- sd(hot_spring_data_table[8,])
#Now I will make a vector out of them
sd_springtemps <- c(Sd_Bluebell,sd_Opal,sd_Riverside,sd_TooHot,sd_Mystery,sd_Emerald,sd_Black,sd_Pearl)
#and then add the vector as a column
xtra_complete_spring_temp_table <- cbind(hot_spring_data_table,sd_springtemps)
xtra_complete_spring_temp_table
#ok it worked! I will do the rest of them now
sd_Opal <- sd(hot_spring_data_table[2,])
sd_Riverside <- sd(hot_spring_data_table[3,])
sd_TooHot <- sd(hot_spring_data_table[4,])
sd_Mystery <- sd(hot_spring_data_table[5,])
sd_Emerald <- sd(hot_spring_data_table[6,])
sd_Black <- sd(hot_spring_data_table[7,])
sd_Pearl <- sd(hot_spring_data_table[8,])
#Now I will make a vector out of them
sd_springtemps <- c(Sd_Bluebell,sd_Opal,sd_Riverside,sd_TooHot,sd_Mystery,sd_Emerald,sd_Black,sd_Pearl)
#and then add the vector as a column
xtra_complete_spring_temp_table <- cbind(complete_spring_temp_table,sd_springtemps)
xtra_complete_spring_temp_table
complete_spring_temp_table[2,3]
